{
    "negative_rETH_ratio_update_event": {
        "title": ":warning: Negative rETH Ratio Update",
        "description": "The rETH ratio has decreased from `%{prevRETHRate}` to `%{currRETHRate}`!"
    },
    "service_interrupted": {
        "title": ":warning: Failure in Event Processing",
        "description": "The developer has automatically been notified of this error.\nNo further action is required."
    },
    "reth_burn_event": {
        "title": ":fire: rETH Burn",
        "description": "Burned **%{amount} rETH** for %{ethAmount} ETH!",
        "description_small": ":fire: %{fancy_from} burned **%{amount} rETH** for %{ethAmount} ETH!"
    },
    "node_merkle_rewards_claimed_rpl": {
        "title": ":moneybag: Major RPL Rewards Claim",
        "description": "%{claimer} claimed %{amountRPL} RPL (worth %{ethAmount} ETH)!"
    },
    "node_merkle_rewards_claimed_both": {
        "title": ":moneybag: Major Reward Claim",
        "description": "%{claimer} claimed %{amountRPL} RPL (worth %{ethAmount} ETH) and %{amountETH} ETH!"
    },
    "rpl_stake_event": {
        "title": ":moneybag: RPL Stake",
        "description": "%{from} staked **%{amount} RPL** (worth %{ethAmount} ETH)!",
        "description_small": ":moneybag: %{fancy_from} staked **%{amount} RPL** (worth %{ethAmount} ETH)!"
    },
    "rpl_withdraw_event": {
        "title": ":leaves: RPL Withdrawal",
        "description": "%{to} withdrew **%{amount} RPL** (worth %{ethAmount} ETH)!"
    },
    "eth_deposit_event": {
        "title": ":moneybag: Node ETH Deposit",
        "description": "%{from} deposited **%{amount} ETH** into node %{nodeAddress}!",
        "description_small": ":moneybag: %{from} deposited **%{amount} ETH** into node %{nodeAddress}!"
    },
    "eth_withdraw_event": {
        "title": ":leaves: Node ETH Withdrawal",
        "description": "%{to} withdrew **%{amount} ETH** from node %{nodeAddress}!",
        "description_small": ":leaves: %{to} withdrew **%{amount} ETH** from node %{nodeAddress}!"
    },
    "pool_deposit_assigned_single_event": {
        "title": ":rocket: Deposit Assigned To Minipool",
        "description_small": ":handshake: Minipool %{minipool_clean} owned by operator %{node} has been matched and left the queue!"
    },
    "reth_transfer_event": {
        "title": ":whale: Large rETH Transfer",
        "description": "**%{value} rETH** transferred from %{from} to %{to}!"
    },
    "pdao_erc20_transfer_event": {
        "description_small": ":moneybag: %{from} transferred **%{amount} %{symbol}** to %{to}!"
    },
    "price_update_event": {
        "title": ":moneybag: RPL Price Update",
        "description": "The RPL price has been updated to **`%{value} RPL/ETH`!**\n\n**This will be the last update before the current reward period ends!**\nYou have until <t:%{rewardPeriodEnd}> (<t:%{rewardPeriodEnd}:R>) to increase your RPL stake!"
    },
    "pool_deposit_assigned_event": {
        "title": ":rocket: Deposit Assigned To Minipools",
        "description_small": ":handshake: %{assignmentCount} minipools have been matched and left the queue!"
    },
    "pool_deposit_recycled_event": {
        "title": ":recycle: Pool Deposit By Protocol Contract",
        "description_small": ":recycle: A protocol contract deposited **%{amount} ETH** into the deposit pool!"
    },
    "minipool_exit_event": {
        "title": ":leaves: Minipool Closed",
        "description": "Minipool %{minipool} has been flagged as withdrawable!"
    },
    "minipool_withdrawal_processed_event": {
        "title": ":moneybag: Minipool Withdrawal",
        "description_small": ":moneybag: **%{totalAmount} ETH** has been distributed from minipool %{minipool}, owned by operator %{node}!"
    },
    "pool_deposit_event": {
        "title": ":rocket: Pool Deposit",
        "description": "**%{amount} ETH** deposited into the deposit pool!",
        "description_small": ":rocket: %{fancy_from} deposited **%{amount} ETH** into the deposit pool!"
    },
    "odao_rewards_snapshot_event": {
        "title": ":camera_with_flash: Reward Snapshot Published",
        "description": "Snapshot #%{rewardIndex} has been published by the oDAO!\nIt spans from <t:%{intervalStartTime}> till <t:%{intervalEndTime}>"
    },
    "odao_rewards_snapshot_submission_event": {
        "title": ":writing_hand: Reward Snapshot Submission Submitted",
        "description": "%{from} has published their submission for snapshot #%{rewardIndex}"
    },
    "odao_proposal_add_event": {
        "title": ":bulb: New oDAO Proposal",
        "description": "%{proposer} created **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "odao_proposal_execute": {
        "title": ":white_check_mark: oDAO Proposal Executed",
        "description": "%{executor} executed **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "odao_proposal_vote_event": {
        "title": ":ballot_box: oDAO Vote",
        "description": "%{voter} voted %{decision} **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "odao_proposal_cancel_event": {
        "title": ":no_entry_sign: oDAO Proposal Canceled",
        "description": "%{canceller} canceled **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "odao_member_join_event": {
        "title": ":new: oDAO Member Joined",
        "description": "%{nodeAddress} joined the oDAO with a bond of **%{rplBondAmount} RPL**!"
    },
    "odao_member_leave_event": {
        "title": ":door: oDAO Member Left",
        "description": "%{nodeAddress} left the oDAO!"
    },
    "odao_member_kick_event": {
        "title": ":boot: oDAO Member Kicked",
        "description": "%{nodeAddress} was kicked from the oDAO!"
    },
    "odao_setting": {
        "title": ":crystal_ball: oDAO Setting Modified",
        "description": "Setting `%{settingPath}` set to `%{value_raw}`!"
    },
    "odao_upgrade": {
        "title": ":crystal_ball: oDAO Contract Upgrade",
        "description": "The contract `%{name}` has been upgraded to %{contractAddress}!"
    },
    "odao_member_invite": {
        "title": ":crystal_ball: oDAO Invite",
        "description": "**%{id}** (%{nodeAddress}) has been invited to join the oDAO!"
    },
    "sdao_proposal_add_event": {
        "title": ":bulb: New Security Council Proposal",
        "description": "%{proposer} created **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "sdao_proposal_execute": {
        "title": ":white_check_mark: Security Council Proposal Executed",
        "description": "%{executor} executed **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "sdao_proposal_vote_event": {
        "title": ":ballot_box: Security Council Vote",
        "description": "%{voter} voted %{decision} **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "sdao_proposal_cancel_event": {
        "title": ":no_entry_sign: Security Council Proposal Canceled",
        "description": "%{canceller} canceled **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "sdao_member_join_event": {
        "title": ":new: Security Council Induction",
        "description": "%{nodeAddress} has joined the security council!"
    },
    "sdao_member_leave_event": {
        "title": ":door: Security Council Resignation",
        "description": "%{nodeAddress} has left the security council!"
    },
    "sdao_member_request_leave_event": {
        "title": ":door: Security Council Resignation Request",
        "description": "%{nodeAddress} has requested to leave the security council!"
    },
   "sdao_member_invite": {
        "title": ":lock: Security Council Invite",
        "description": "%{memberAddress} has been invited to join the security council!"
    },
    "sdao_member_kick": {
        "title": ":boot: Security Council Expulsion",
        "description": "%{memberAddress} has been kicked from the security council!"
    },
    "sdao_member_kick_multi": {
        "title": ":boot: Security Council Mass Expulsion",
        "description": "Multiple members have been kicked from the security council!\n%{member_list}"
    },
    "sdao_member_replace": {
        "title": ":repeat: Security Council Replacement",
        "description": "%{existingMemberAddress} has been replaced by %{newMemberAddress}!"
    },
    "node_register_event": {
        "title": ":mailbox_with_mail: Node Registered",
        "description": "%{node} registered as a node operator!"
    },
    "rpl_inflation_event": {
        "title": ":chart_with_upwards_trend: RPL Inflation Occurred",
        "description": "%{value} new RPL minted! The new total supply is %{total_supply} RPL."
    },
    "milestone_rpl_stake": {
        "title": ":tada: Milestone Reached",
        "description": "%{result_value} RPL has been staked by node operators!"
    },
    "milestone_max_deposit_size": {
        "title": ":tada: Milestone Reached",
        "description": "The maximum deposit size has reached **%{result_value}** ETH!"
    },
    "milestone_reth_supply": {
        "title": ":tada: Milestone Reached",
        "description": "%{result_value} rETH has been issued!"
    },
    "milestone_staking_minipools": {
        "title": ":tada: Milestone Reached",
        "description": "%{result_value} minipools have been created!"
    },
    "milestone_registered_nodes": {
        "title": ":tada: Milestone Reached",
        "description": "%{result_value} Nodes have been registered!"
    },
    "milestone_rpl_swapped": {
        "title": ":tada: Milestone Reached",
        "description": "%{result_value}% of all RPL has been exchanged for the new version!"
    },
    "bootstrap_odao_member": {
        "title": ":satellite_orbital: oDAO Bootstrap Mode: Member Added",
        "description": "%{nodeAddress} added as a new oDAO member!"
    },
    "bootstrap_odao_setting": {
        "title": ":satellite_orbital: oDAO Bootstrap Mode: Setting Modified",
        "description": "Setting `%{settingPath}` set to `%{value_raw}`!"
    },
    "bootstrap_odao_network_upgrade": {
        "title": ":satellite_orbital: oDAO Bootstrap Mode: Network Upgrade",
        "description": "%{description}"
    },
    "bootstrap_odao_disable": {
        "title": ":satellite_orbital: oDAO Bootstrap Mode Disabled",
        "description": "Bootstrap mode for the oDAO is now disabled! The guardian has handed off full control over the Oracle DAO to its members!"
    },
    "bootstrap_pdao_setting_multi_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Multiple Settings Modified",
        "description": "%{description}"
    },
    "bootstrap_pdao_setting_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Setting Modified",
        "description": "Setting `%{settingPath}` set to `%{value_raw}`!"
    },
    "bootstrap_pdao_claimer_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Changed Reward Distribution",
        "description": "```%{description}```"
    },
    "bootstrap_pdao_spend_treasury_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Treasury Spend",
        "description": "**%{amount} RPL** from treasury sent to %{recipientAddress}!"
    },
    "bootstrap_pdao_spend_treasury_recurring_new_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: New Recurring Spend",
        "description": "%{recipientAddress} will be awarded **%{numPeriods} x %{amountPerPeriod} RPL**!"
    },
    "bootstrap_pdao_spend_treasury_recurring_update_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Updated Recurring Spend",
        "description": "%{recipientAddress} will be awarded **%{numPeriods} x %{amountPerPeriod} RPL**!"
    },
    "bootstrap_pdao_disable_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode Disabled",
        "description": "Bootstrap mode for the pDAO is now disabled! The guardian has handed off full control over the Protocol DAO to on-chain governance!"
    },
    "bootstrap_pdao_enable_governance_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Enable Governance",
        "description": "On-chain governance has been enabled!"
    },
    "bootstrap_sdao_member_invite_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Security Council Invite",
        "description": "**%{id}** (%{memberAddress}) has been invited to join the security council!"
    },
    "bootstrap_sdao_member_kick_event": {
        "title": ":satellite_orbital: pDAO Bootstrap Mode: Kicked Security Council Member",
        "description": "%{memberAddress} has been removed from the security council!"
    },
    "sdao_setting": {
        "title": ":lock: Security Council Setting Modified",
        "description": "Setting `%{settingPath}` set to `%{value_raw}`!"
    },
    "pdao_setting_multi": {
        "title": ":classical_building: Protocol DAO: Multiple Settings Modified",
        "description": "%{description}"
    },
    "pdao_setting": {
        "title": ":classical_building: Protocol DAO: Setting Modified",
        "description": "Setting `%{settingPath}` set to `%{value_raw}`!"
    },
    "pdao_claimer": {
        "title": ":classical_building: Protocol DAO: Changed Reward Distribution",
        "description": "```%{description}```"
    },
    "pdao_proposal_add_event": {
        "title": ":bulb: New pDAO Proposal",
        "description": "%{proposer} created **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "pdao_proposal_vote_event": {
        "title": ":writing_hand: Major pDAO Vote",
        "description": "**Proposal #%{proposalID}**:\n%{voter} voted `%{decision}` with a voting power of **%{votingPower}**!\n```%{proposal_body}```"
    },
    "pdao_proposal_vote_override_event": {
        "title": ":person_gesturing_no: pDAO Delegate Override",
        "description": "**Proposal #%{proposalID}**:\n%{voter} overrode their delegate %{delegate} to vote `%{decision}` with a voting power of **%{votingPower}**!\n```%{proposal_body}```"
    },
    "pdao_proposal_execute": {
        "title": ":white_check_mark: pDAO Proposal Executed",
        "description": "%{executor} executed **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "pdao_proposal_finalise_event": {
        "title": ":x: pDAO Proposal Finalized",
        "description": "**Proposal #%{proposalID}** has been finalized after a veto vote!\n```%{proposal_body}```"
    },
    "pdao_proposal_destroy_event": {
        "title": ":bomb: pDAO Proposal Destroyed",
        "description": "**Proposal #%{proposalID}** has been destroyed after a successful challenge!\n```%{proposal_body}```"
    },
    "pdao_proposal_challenge_event": {
        "title": ":crossed_swords: pDAO Proposal Challenge",
        "description": "%{challenger} challenged **proposal #%{proposalID}**!\n```%{proposal_body}```"
    },
    "pdao_proposal_root_event": {
        "title": ":shield: pDAO Proposal Defense",
        "description": "**Proposal #%{proposalID}**:\n%{proposer} responded to a challenge by submitting a new root!\n```%{proposal_body}```"
    },
    "pdao_proposal_bond_burn_event": {
        "title": ":fire: pDAO Proposal Bond Burned",
        "description": "**Proposal #%{proposalID}**:\nThe **%{amount} RPL** bond posted by %{proposer} has been burned!"
    },
    "pdao_set_delegate": {
        "title": ":handshake: Large pDAO Delegation",
        "description": "%{delegator} has delegated their voting power of **%{votingPower}** to %{delegate}!",
        "description_small": ":handshake: %{delegator_clean} has delegated their voting power of **%{votingPower}** to %{delegate_clean}!"
    },
    "pdao_spend_treasury": {
        "title": ":bank: DAO Treasury Spend",
        "description": "**%{amount} RPL** from treasury sent to %{to}!"
    },
    "pdao_spend_treasury_recurring_new": {
        "title": ":bank: DAO Treasury: New Recurring Spend",
        "description": "%{recipient} will be awarded **%{numPeriods} x %{amountPerPeriod} RPL**!"
    },
    "pdao_spend_treasury_recurring_update": {
        "title": ":bank: DAO Treasury: Updated Recurring Spend",
        "description": "%{recipient} will be awarded **%{numPeriods} x %{amountPerPeriod} RPL**!"
    },
    "pdao_spend_treasury_recurring_claim_event": {
        "title": ":bank: DAO Treasury Contract Claim",
        "description": "%{recipient} has claimed **%{amount} RPL** from their outstanding balance!"
    },
    "minipool_scrub_event": {
        "title": ":rotating_light: Minipool Scrubbed",
        "description": "Minipool %{minipool} has been scrubbed, likely due to having invalid withdrawal credentials on the beacon chain!"
    },
    "minipool_dissolve_event": {
        "title": ":rotating_light: Minipool Dissolved",
        "description": "Minipool %{minipool} failed to stake its assigned ETH and has been dissolved!"
    },
    "vacant_minipool_scrub_event": {
        "title": ":rotating_light: Vacant Minipool Scrubbed",
        "description": "Vacant Minipool %{minipool} has been scrubbed likely due to **%{scrub_reason}**!"
    },
    "minipool_scrub_vote_event": {
        "title": ":warning: Minipool Voted For Scrub",
        "description_small": ":warning: %{member} has voted to scrub minipool %{minipool}!"
    },
    "vacant_minipool_scrub_vote_event": {
        "title": ":warning: Vacant Minipool Voted For Scrub",
        "description_small": ":warning: %{member} has voted to scrub vacant minipool %{minipool}!"
    },
    "node_rpl_slash_event": {
        "title": ":rotating_light: Node Operator Slashed",
        "description": "Node operator %{node} has been slashed for **%{amount} RPL** (%{ethValue} ETH)!"
    },
    "minipool_penalty_updated": {
        "title": ":rotating_light: Minipool Penalty Updated",
        "description": "Minipool %{minipoolAddress} has had its Penalty increased to %{penalty_perc}%!"
    },
    "node_smoothing_pool_joined": {
        "title": ":cup_with_straw: Node Operator Joined Smoothing Pool",
        "description": "Node operator %{node} joined the smoothing pool with their %{minipoolCount} minipools!"
    },
    "node_smoothing_pool_left": {
        "title": ":leaves: Node Operator Left Smoothing Pool",
        "description": "Node operator %{node} has left the smoothing pool with their %{minipoolCount} minipools!"
    },
    "auction_lot_create_event": {
        "title": ":scales: Lot Created",
        "description": "%{by} created Lot #%{lotIndex}, which will auction off %{rplAmount} RPL!"
    },
    "auction_bid_event": {
        "title": ":scales: Bid On Lot",
        "description": "%{by} bid %{bidAmount} ETH for %{rplAmount} RPL on Lot #%{lotIndex}!"
    },
    "auction_rpl_recover_event": {
        "title": ":scales: RPL Recovered From Lot",
        "description": "%{rplAmount} RPL recovered from Lot #%{lotIndex}!"
    },
    "minipool_deposit_received_event": {
        "title": ":construction_site: Minipool Created",
        "description": "Minipool %{minipool_clean} has been created with an operator share of **%{depositAmount} ETH**!"
    },
    "minipool_deposit_received_event_credit": {
        "title": ":magic_wand: Minipool Created Using Credit",
        "description": "Minipool %{minipool_clean} has been created with an operator share of **%{depositAmount} ETH**!\n**%{creditAmount} ETH** worth of credit used for this deposit!"
    },
    "minipool_deposit_received_event_balance": {
        "title": ":magic_wand: Minipool Created Using ETH Balance",
        "description": "Minipool %{minipool_clean} has been created with an operator share of **%{depositAmount} ETH**!\n**%{balanceAmount} ETH** of the node's existing balance was used for this deposit!"
    },
    "minipool_deposit_received_event_shared": {
        "title": ":magic_wand: Minipool Created Using Credit",
        "description": "Minipool %{minipool_clean} has been created with an operator share of **%{depositAmount} ETH**!\n**%{creditAmount} ETH** of credit and **%{balanceAmount} ETH** of the node's balance were used for this deposit!"
    },
    "minipool_bond_reduction_started_event": {
        "title": ":magic_wand: Minipool Bond Reduction Initiated",
        "description_small": ":compression: %{node} initiated a bond reduction for their minipool %{minipool_clean} from **%{previousBondAmount} ETH** to **%{newBondAmount} ETH**!"
    },
    "minipool_bond_reduce_event": {
        "title": ":magic_wand: Minipool Bond Reduced",
        "description_small": ":magic_wand: %{node} reduced the bond of their minipool %{minipool_clean} from **%{previousBondAmount} ETH** to **%{newBondAmount} ETH**!"
    },
    "minipool_vote_against_bond_reduction_event": {
        "title": ":warning: Voted Against Bond Reduction",
        "description_small": "%{member} has voted against the bond reduction of minipool %{minipool}!"
    },
    "minipool_bond_reduction_cancelled_event": {
        "title": ":rotating_light: Bond Reduction Cancelled",
        "description": "Minipool %{minipool} has been denied the ability to reduce its bond!"
    },
    "mev_proposal_event": {
        "title": ":moneybag: Large Minipool Proposal",
        "description": "Minipool %{minipool} has proposed a block worth **%{reward_amount} ETH**!"
    },
    "mev_proposal_smoothie_event": {
        "title": ":cup_with_straw: Large Smoothing Pool Proposal",
        "description": "Minipool %{minipool} has proposed a block worth **%{reward_amount} ETH**!"
    },
    "minipool_vacancy_prepared_event": {
        "title": ":link: Solo Migration Initiated",
        "description": "Migration of solo validator %{pubkey} to minipool %{minipool} with a bond of **%{bondAmount} ETH** was initiated!"
    },
    "minipool_failed_deposit": {
        "title": ":fire: Failed Minipool Deposit",
        "description": ":fire_engine: %{node} burned **%{burnedValue} ETH** trying to create a minipool! :fire_engine:"
    },
    "minipool_slash_event": {
        "title": ":rotating_light: Minipool Slashed",
        "description": "Minipool %{minipool} has been slashed by %{slasher}"
    },
    "otc_swap_event": {
        "title": ":currency_exchange: OTC Swap",
        "description": "%{seller_clean} exchanged %{sellAmount} %{sellToken} for %{buyAmount} %{buyToken} with %{buyer_clean}"
    },
    "odao_member_challenge_event": {
        "title": ":rotating_light: oDAO Member Challenge Started",
        "description": "%{nodeChallengedAddress_clean} has been challenged by %{nodeChallengerAddress_clean}!\nThey have to respond before %{challengeDeadline} or they will be kicked from the oDAO!"
    },
    "odao_member_challenge_accepted_event": {
        "title": ":warning: oDAO Member Challenge Passed",
        "description": "%{nodeChallengedAddress_clean} has been successfully challenged!\nTheir bond of %{rplBondAmount} RPL has been burned and they have been kicked out of the oDAO!"
    },
    "odao_member_challenge_rejected_event": {
        "title": ":no_entry_sign: oDAO Member Challenge Rejected",
        "description": "%{nodeChallengedAddress_clean} has responded to the challenge, making it invalid!"
    },
    "deposit_pool_queue_clear_full": {
        "title": ":tada: Deposit Pool Queue Clear",
        "description": "%{node} cleared %{count} minipools from the deposit pool queue!"
    },
    "deposit_pool_queue_clear_partial": {
        "title": ":tada: Partial Deposit Pool Queue Clear",
        "description": "%{node} cleared %{count} minipools from the deposit pool queue!"
    },
    "odao_minipool_penalty_updated": {
        "title": ":rotating_light: Minipool Penalty",
        "description": "The maximum minipool penalty tate has been raised to %{rate_perc}%!"
    },
    "redstone_upgrade_triggered": {
        "title": ":tada: Redstone Upgrade Complete!",
        "description": ""
    },
    "atlas_upgrade_triggered": {
        "title": ":tada: Atlas Upgrade Complete!",
        "description": ""
    },
    "houston_upgrade_triggered": {
        "title": ":tada: Houston Upgrade Complete!",
        "description": ""
    },
    "houston_hotfix_upgrade_triggered": {
        "title": ":tada: Houston Hotfix Upgrade Complete!",
        "description": ""
    },
    "unsteth_withdrawal_requested_event": {
        "title": ":money_with_wings: Large stETH Withdrawal Requested",
        "description": "%{owner} has requested a withdrawal of **%{amountOfStETH} stETH**!"
    },
    "cow_order_buy_rpl_found": {
        "title": ":cow: BUY Order Found",
        "description": "%{cow_owner} has placed a buy order for %{ourAmount} RPL!\n Exchanging %{otherAmount} %{otherToken} for %{ourAmount} RPL (%{ratioAmount} RPL/%{otherToken})\nExpires: %{deadline}"
    },
    "cow_order_buy_reth_found": {
        "title": ":cow: rETH Order Found",
        "description": "%{cow_owner} has placed a buy order for %{ourAmount} rETH!\n Exchanging %{otherAmount} %{otherToken} for %{ourAmount} rETH (%{ratioAmount} rETH/%{otherToken})\nExpires: %{deadline}"
    },
    "cow_order_sell_rpl_found": {
        "title": ":cow: SELL Order Found",
        "description": "%{cow_owner} has placed a sell order for %{ourAmount} RPL!\n Exchanging %{ourAmount} RPL for %{otherAmount} %{otherToken} (%{ratioAmount} RPL/%{otherToken})\nExpires: %{deadline}"
    },
    "cow_order_sell_reth_found": {
        "title": ":cow: rETH Order Found",
        "description": "%{cow_owner} has placed a sell order for %{ourAmount} rETH!\n Exchanging %{ourAmount} rETH for %{otherAmount} %{otherToken} (%{ratioAmount} rETH/%{otherToken})\nExpires: %{deadline}"
    },
    "finality_delay_event": {
        "title": ":warning: Finality Delay On Beacon Chain",
        "description": "Finality has been delayed for **%{finality_delay} Epochs** on the Beacon Chain!\n\nPlease make sure that your node is operating correctly to minimize inactivity leak! **Every attestation counts!**"
    },
    "finality_delay_recover_event": {
        "title": ":tada: Finality Recovered",
        "description": "Finality has been recovered on the Beacon Chain!"
    },
    "cs_max_validator_increase_event": {
        "title": "<:nodeset:1297235812278341653> Constellation Validator Limit Increased",
        "description": "Constellation operators can now run **%{newLimit}** minipools!\n This is up from the previous limit of **%{oldLimit}**."
    },
    "cs_max_validator_decrease_event": {
        "title": "<:nodeset:1297235812278341653> Constellation Validator Limit Decreased",
        "description": "Constellation operators are now limited to **%{newLimit}** minipools!\n This is down from the previous limit of **%{oldLimit}**."
    },
    "cs_eth_treasury_fee_change_event": {
        "title": "<:nodeset:1297235812278341653> xrETH Treasury Fee Changed",
        "description": "The xrETH treasury fee has changed from **%{oldFee}%** to **%{newFee}%**!"
    },
    "cs_eth_no_fee_change_event": {
        "title": "<:nodeset:1297235812278341653> xrETH Operator Fee Changed",
        "description": "The xrETH node operator fee has changed from **%{oldFee}%** to **%{newFee}%**!"
    },
    "cs_eth_mint_fee_change_event": {
        "title": "<:nodeset:1297235812278341653> xrETH Mint Fee Changed",
        "description": "The xrETH mint fee has changed from **%{oldFee}%** to **%{newFee}%**!"
    },
    "cs_deposit_eth_event": {
        "title": "<:nodeset:1297235812278341653> xrETH Deposit",
        "description": "**%{shares} xrETH** minted from **%{assets} ETH**!",
        "description_small": "<:nodeset:1297235812278341653> %{sender} minted **%{shares} xrETH** from **%{assets} ETH**!"
    },
    "cs_withdraw_eth_event": {
        "title": "<:nodeset:1297235812278341653> xrETH Withdrawal",
        "description": "**%{shares} xrETH** burned for **%{assets} ETH**!",
        "description_small": "<:nodeset:1297235812278341653> %{sender} burned **%{shares} xrETH** for **%{assets} ETH**!"
    },
    "cs_rpl_treasury_fee_change_event": {
        "title": "<:nodeset:1297235812278341653> xRPL Treasury Fee Changed",
        "description": "The xRPL treasury fee has been changed from **%{oldFee}%** to **%{newFee}%**!"
    },
    "cs_deposit_rpl_event": {
        "title": "<:nodeset:1297235812278341653> xRPL Deposit",
        "description": "**%{shares} xRPL** minted from **%{assets} RPL**!",
        "description_small": "<:nodeset:1297235812278341653> %{sender} minted **%{shares} xRPL** from **%{assets} RPL**!"
    },
    "cs_withdraw_rpl_event": {
        "title": "<:nodeset:1297235812278341653> xRPL Withdrawal",
        "description": "**%{shares} xRPL** burned for **%{assets} RPL**!",
        "description_small": "<:nodeset:1297235812278341653> %{sender} burned **%{shares} xRPL** for **%{assets} RPL**!"
    },
    "cs_operator_added_event": {
        "title": "<:nodeset:1297235812278341653> New Constellation Operator",
        "description": "%{address} registered as a node operator for Constellation!"
    },
    "cs_operators_added_event": {
        "title": "<:nodeset:1297235812278341653> New Constellation Operators",
        "description": "%{operatorList}"
    },
    "cs_operator_removed_event": {
        "title": "<:nodeset:1297235812278341653> Constellation Operator Removed",
        "description": "%{address} has been removed as a node operator!"
    },
    "cs_operators_removed_event": {
        "title": "<:nodeset:1297235812278341653> Constellation Operators Removed",
        "description": "%{operatorList}"
    },
    "cs_rpl_min_ratio_change_event": {
        "title": "<:nodeset:1297235812278341653> Constellation RPL Minimum Changed",
        "description": "The supernode's RPL bond minimum changed from **%{oldRatio}%** to **%{newRatio}%**!"
    },
    "cs_rpl_target_ratio_change_event": {
        "title": "<:nodeset:1297235812278341653> Constellation RPL Target Changed",
        "description": "The supernode's RPL bond target changed from **%{oldRatio}%** to **%{newRatio}%**!"
    },
    "exit_arbitrage_event": {
        "title": ":money_mouth: Large Exit Arbitrage",
        "description": "%{caller} earned **%{profit} ETH** with a %{amount} ETH flash loan!",
        "description_small": ":money_mouth: %{caller} earned **%{profit} ETH** from an exit arbitrage!"
    }
}
